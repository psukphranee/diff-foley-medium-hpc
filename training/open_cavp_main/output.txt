Home directory: /Users/920753844
INFO:root:Running with a single process. Device cuda:0.
2024-10-13,01:31:21 | INFO | Running with a single process. Device cuda:0.
INFO:root:Line 219 of main_wds_intra_contrast.py
2024-10-13,01:31:21 | INFO | Line 219 of main_wds_intra_contrast.py
INFO:root:Loaded audio_contrastive_pretrained model config.
2024-10-13,01:31:21 | INFO | Loaded audio_contrastive_pretrained model config.
Video Pretrained: True  Audio Pretrained: True
/Users/920753844/Diff-Foley/training/open_cavp_main/src/open_clip/model.py:574: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(ckpt_path)['state_dict']
====> Load Pretrained Video Encoder Success from: /Users/920753844/Diff-Foley/training/open_cavp_main/src/pretrained_model/slowonly_r50_4x16x1_256e_8xb16_kinetics400-rgb_20220901-f6a40d08.pth
/Users/920753844/Diff-Foley/training/open_cavp_main/src/open_clip/model.py:586: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(ckpt_path)['model']
====> Load Pretrained Audio Encoder Succes from: /Users/920753844/Diff-Foley/training/open_cavp_main/src/pretrained_model/Cnn14_16k_mAP=0.438.pth
INFO:root:Model:
2024-10-13,01:31:23 | INFO | Model:
INFO:root:CLIP_Video_Spec(
  (video_encoder): ResNet3dSlowOnly(
    (conv1): ConvModule(
      (conv): Conv3d(3, 64, kernel_size=(1, 7, 7), stride=(1, 2, 2), padding=(0, 3, 3), bias=False)
      (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (maxpool): MaxPool3d(kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), dilation=1, ceil_mode=False)
    (pool2): MaxPool3d(kernel_size=(2, 1, 1), stride=(2, 1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(512, 1024, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(1024, 2048, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(2048, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(2048, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (adaptive_pool): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (video_project_head): Linear(in_features=2048, out_features=512, bias=True)
  (video_pool): MaxPool1d(kernel_size=16, stride=16, padding=0, dilation=1, ceil_mode=False)
  (spec_encoder): Cnn14(
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_block1): ConvBlock(
      (conv1): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block2): ConvBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block3): ConvBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block4): ConvBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block5): ConvBlock(
      (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block6): ConvBlock(
      (conv1): Conv2d(1024, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fc1): Linear(in_features=2048, out_features=2048, bias=True)
    (final_project): Linear(in_features=2048, out_features=512, bias=True)
  )
  (spec_project_head): Identity()
  (spec_pool): MaxPool1d(kernel_size=16, stride=16, padding=0, dilation=1, ceil_mode=False)
)
2024-10-13,01:31:23 | INFO | CLIP_Video_Spec(
  (video_encoder): ResNet3dSlowOnly(
    (conv1): ConvModule(
      (conv): Conv3d(3, 64, kernel_size=(1, 7, 7), stride=(1, 2, 2), padding=(0, 3, 3), bias=False)
      (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (maxpool): MaxPool3d(kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), dilation=1, ceil_mode=False)
    (pool2): MaxPool3d(kernel_size=(2, 1, 1), stride=(2, 1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(256, 64, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(64, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(128, 128, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(128, 512, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(512, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(512, 1024, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 256, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(256, 256, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(256, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(1024, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (downsample): ConvModule(
          (conv): Conv3d(1024, 2048, kernel_size=(1, 1, 1), stride=(1, 2, 2), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(2048, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck3d(
        (conv1): ConvModule(
          (conv): Conv3d(2048, 512, kernel_size=(3, 1, 1), stride=(1, 1, 1), padding=(1, 0, 0), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv2): ConvModule(
          (conv): Conv3d(512, 512, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1), bias=False)
          (bn): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (conv3): ConvModule(
          (conv): Conv3d(512, 2048, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (bn): BatchNorm3d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (relu): ReLU(inplace=True)
      )
    )
    (adaptive_pool): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (video_project_head): Linear(in_features=2048, out_features=512, bias=True)
  (video_pool): MaxPool1d(kernel_size=16, stride=16, padding=0, dilation=1, ceil_mode=False)
  (spec_encoder): Cnn14(
    (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv_block1): ConvBlock(
      (conv1): Conv2d(1, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block2): ConvBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block3): ConvBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block4): ConvBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block5): ConvBlock(
      (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_block6): ConvBlock(
      (conv1): Conv2d(1024, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (bn2): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (fc1): Linear(in_features=2048, out_features=2048, bias=True)
    (final_project): Linear(in_features=2048, out_features=512, bias=True)
  )
  (spec_project_head): Identity()
  (spec_pool): MaxPool1d(kernel_size=16, stride=16, padding=0, dilation=1, ceil_mode=False)
)
INFO:root:Params:
2024-10-13,01:31:23 | INFO | Params:
INFO:root:  accum_freq: 1
2024-10-13,01:31:23 | INFO |   accum_freq: 1
INFO:root:  aug_cfg: {}
2024-10-13,01:31:23 | INFO |   aug_cfg: {}
INFO:root:  batch_size: 2
2024-10-13,01:31:23 | INFO |   batch_size: 2
INFO:root:  beta1: 0.9
2024-10-13,01:31:23 | INFO |   beta1: 0.9
INFO:root:  beta2: 0.999
2024-10-13,01:31:23 | INFO |   beta2: 0.999
INFO:root:  checkpoint_path: ./logs/2024_10_13-01_31_21-lr_8e-4_warmup200_wds_vgg+audioset_cnn14_pretrained_clip_num3_shift_lb8_intra_loss_w1/checkpoints
2024-10-13,01:31:23 | INFO |   checkpoint_path: ./logs/2024_10_13-01_31_21-lr_8e-4_warmup200_wds_vgg+audioset_cnn14_pretrained_clip_num3_shift_lb8_intra_loss_w1/checkpoints
INFO:root:  coca_caption_loss_weight: 2.0
2024-10-13,01:31:23 | INFO |   coca_caption_loss_weight: 2.0
INFO:root:  coca_contrastive_loss_weight: 1.0
2024-10-13,01:31:23 | INFO |   coca_contrastive_loss_weight: 1.0
INFO:root:  copy_codebase: False
2024-10-13,01:31:23 | INFO |   copy_codebase: False
INFO:root:  csv_caption_key: title
2024-10-13,01:31:23 | INFO |   csv_caption_key: title
INFO:root:  csv_img_key: filepath
2024-10-13,01:31:23 | INFO |   csv_img_key: filepath
INFO:root:  csv_separator: 	
2024-10-13,01:31:23 | INFO |   csv_separator: 	
INFO:root:  data_dir: /Users/920753844/Diff-Foley/video
2024-10-13,01:31:23 | INFO |   data_dir: /Users/920753844/Diff-Foley/video
INFO:root:  dataset_resampled: False
2024-10-13,01:31:23 | INFO |   dataset_resampled: False
INFO:root:  dataset_type: vggsound_audioset_music_webdataset_intra_contrast
2024-10-13,01:31:23 | INFO |   dataset_type: vggsound_audioset_music_webdataset_intra_contrast
INFO:root:  ddp_static_graph: False
2024-10-13,01:31:23 | INFO |   ddp_static_graph: False
INFO:root:  debug: False
2024-10-13,01:31:23 | INFO |   debug: False
INFO:root:  delete_previous_checkpoint: False
2024-10-13,01:31:23 | INFO |   delete_previous_checkpoint: False
INFO:root:  device: cuda:0
2024-10-13,01:31:23 | INFO |   device: cuda:0
INFO:root:  dist_backend: nccl
2024-10-13,01:31:23 | INFO |   dist_backend: nccl
INFO:root:  dist_url: env://
2024-10-13,01:31:23 | INFO |   dist_url: env://
INFO:root:  distributed: False
2024-10-13,01:31:23 | INFO |   distributed: False
INFO:root:  epochs: 1
2024-10-13,01:31:23 | INFO |   epochs: 1
INFO:root:  epochs_cooldown: None
2024-10-13,01:31:23 | INFO |   epochs_cooldown: None
INFO:root:  eps: 1e-08
2024-10-13,01:31:23 | INFO |   eps: 1e-08
INFO:root:  force_custom_text: False
2024-10-13,01:31:23 | INFO |   force_custom_text: False
INFO:root:  force_image_size: None
2024-10-13,01:31:23 | INFO |   force_image_size: None
INFO:root:  force_patch_dropout: None
2024-10-13,01:31:23 | INFO |   force_patch_dropout: None
INFO:root:  force_quick_gelu: False
2024-10-13,01:31:23 | INFO |   force_quick_gelu: False
INFO:root:  fps: 4
2024-10-13,01:31:23 | INFO |   fps: 4
INFO:root:  gather_with_grad: False
2024-10-13,01:31:23 | INFO |   gather_with_grad: False
INFO:root:  grad_checkpointing: False
2024-10-13,01:31:23 | INFO |   grad_checkpointing: False
INFO:root:  grad_clip_norm: None
2024-10-13,01:31:23 | INFO |   grad_clip_norm: None
INFO:root:  horovod: False
2024-10-13,01:31:23 | INFO |   horovod: False
INFO:root:  image_mean: None
2024-10-13,01:31:23 | INFO |   image_mean: None
INFO:root:  image_std: None
2024-10-13,01:31:23 | INFO |   image_std: None
INFO:root:  imagenet_v2: None
2024-10-13,01:31:23 | INFO |   imagenet_v2: None
INFO:root:  imagenet_val: None
2024-10-13,01:31:23 | INFO |   imagenet_val: None
INFO:root:  intra_clip_num: 3
2024-10-13,01:31:23 | INFO |   intra_clip_num: 3
INFO:root:  intra_contrast_weight: 1
2024-10-13,01:31:23 | INFO |   intra_contrast_weight: 1
INFO:root:  local_loss: False
2024-10-13,01:31:23 | INFO |   local_loss: False
INFO:root:  local_rank: 0
2024-10-13,01:31:23 | INFO |   local_rank: 0
INFO:root:  lock_image: False
2024-10-13,01:31:23 | INFO |   lock_image: False
INFO:root:  lock_image_freeze_bn_stats: False
2024-10-13,01:31:23 | INFO |   lock_image_freeze_bn_stats: False
INFO:root:  lock_image_unlocked_groups: 0
2024-10-13,01:31:23 | INFO |   lock_image_unlocked_groups: 0
INFO:root:  lock_text: False
2024-10-13,01:31:23 | INFO |   lock_text: False
INFO:root:  lock_text_freeze_layer_norm: False
2024-10-13,01:31:23 | INFO |   lock_text_freeze_layer_norm: False
INFO:root:  lock_text_unlocked_layers: 0
2024-10-13,01:31:23 | INFO |   lock_text_unlocked_layers: 0
INFO:root:  log_every_n_steps: 1
2024-10-13,01:31:23 | INFO |   log_every_n_steps: 1
INFO:root:  log_level: 20
2024-10-13,01:31:23 | INFO |   log_level: 20
INFO:root:  log_local: False
2024-10-13,01:31:23 | INFO |   log_local: False
INFO:root:  log_path: ./logs/2024_10_13-01_31_21-lr_8e-4_warmup200_wds_vgg+audioset_cnn14_pretrained_clip_num3_shift_lb8_intra_loss_w1/out.log
2024-10-13,01:31:23 | INFO |   log_path: ./logs/2024_10_13-01_31_21-lr_8e-4_warmup200_wds_vgg+audioset_cnn14_pretrained_clip_num3_shift_lb8_intra_loss_w1/out.log
INFO:root:  logs: ./logs/
2024-10-13,01:31:23 | INFO |   logs: ./logs/
INFO:root:  loss_type: clip_intra_contrast
2024-10-13,01:31:23 | INFO |   loss_type: clip_intra_contrast
INFO:root:  lr: 0.0008
2024-10-13,01:31:23 | INFO |   lr: 0.0008
INFO:root:  lr_cooldown_end: 0.0
2024-10-13,01:31:23 | INFO |   lr_cooldown_end: 0.0
INFO:root:  lr_cooldown_power: 1.0
2024-10-13,01:31:23 | INFO |   lr_cooldown_power: 1.0
INFO:root:  lr_scheduler: cosine
2024-10-13,01:31:23 | INFO |   lr_scheduler: cosine
INFO:root:  model: audio_contrastive_pretrained
2024-10-13,01:31:23 | INFO |   model: audio_contrastive_pretrained
INFO:root:  name: 2024_10_13-01_31_21-lr_8e-4_warmup200_wds_vgg+audioset_cnn14_pretrained_clip_num3_shift_lb8_intra_loss_w1
2024-10-13,01:31:23 | INFO |   name: 2024_10_13-01_31_21-lr_8e-4_warmup200_wds_vgg+audioset_cnn14_pretrained_clip_num3_shift_lb8_intra_loss_w1
INFO:root:  no_set_device_rank: False
2024-10-13,01:31:23 | INFO |   no_set_device_rank: False
INFO:root:  precision: amp
2024-10-13,01:31:23 | INFO |   precision: amp
INFO:root:  pretrained: 
2024-10-13,01:31:23 | INFO |   pretrained: 
INFO:root:  pretrained_image: False
2024-10-13,01:31:23 | INFO |   pretrained_image: False
INFO:root:  rank: 0
2024-10-13,01:31:23 | INFO |   rank: 0
INFO:root:  remote_sync: None
2024-10-13,01:31:23 | INFO |   remote_sync: None
INFO:root:  remote_sync_frequency: 300
2024-10-13,01:31:23 | INFO |   remote_sync_frequency: 300
INFO:root:  remote_sync_protocol: s3
2024-10-13,01:31:23 | INFO |   remote_sync_protocol: s3
INFO:root:  report_to: 
2024-10-13,01:31:23 | INFO |   report_to: 
INFO:root:  resume: None
2024-10-13,01:31:23 | INFO |   resume: None
INFO:root:  save_frequency: 1
2024-10-13,01:31:23 | INFO |   save_frequency: 1
INFO:root:  save_most_recent: True
2024-10-13,01:31:23 | INFO |   save_most_recent: True
INFO:root:  seed: 0
2024-10-13,01:31:23 | INFO |   seed: 0
INFO:root:  shift: 8
2024-10-13,01:31:23 | INFO |   shift: 8
INFO:root:  shift_lb: 8
2024-10-13,01:31:23 | INFO |   shift_lb: 8
INFO:root:  skip_scheduler: False
2024-10-13,01:31:23 | INFO |   skip_scheduler: False
INFO:root:  spec_encode: cnn14_pool
2024-10-13,01:31:23 | INFO |   spec_encode: cnn14_pool
INFO:root:  split_txt_path: /public/MARS/Users/lsm/lsm_project/lsm_project/audio_diffusion/process_data/clean_vggsound_fullset/data_list/
2024-10-13,01:31:23 | INFO |   split_txt_path: /public/MARS/Users/lsm/lsm_project/lsm_project/audio_diffusion/process_data/clean_vggsound_fullset/data_list/
INFO:root:  sr: 16000
2024-10-13,01:31:23 | INFO |   sr: 16000
INFO:root:  subset_num: 400
2024-10-13,01:31:23 | INFO |   subset_num: 400
INFO:root:  temporal_mix_weight: 1.0
2024-10-13,01:31:23 | INFO |   temporal_mix_weight: 1.0
INFO:root:  tensorboard: False
2024-10-13,01:31:23 | INFO |   tensorboard: False
INFO:root:  tensorboard_path: 
2024-10-13,01:31:23 | INFO |   tensorboard_path: 
INFO:root:  torchscript: False
2024-10-13,01:31:23 | INFO |   torchscript: False
INFO:root:  trace: False
2024-10-13,01:31:23 | INFO |   trace: False
INFO:root:  train_data: audioset_vggsound_music
2024-10-13,01:31:23 | INFO |   train_data: audioset_vggsound_music
INFO:root:  train_num_samples: 500
2024-10-13,01:31:23 | INFO |   train_num_samples: 500
INFO:root:  truncate_sec: 4
2024-10-13,01:31:23 | INFO |   truncate_sec: 4
INFO:root:  use_bn_sync: False
2024-10-13,01:31:23 | INFO |   use_bn_sync: False
INFO:root:  val_data: None
2024-10-13,01:31:23 | INFO |   val_data: None
INFO:root:  val_frequency: 2
2024-10-13,01:31:23 | INFO |   val_frequency: 2
INFO:root:  val_num_samples: None
2024-10-13,01:31:23 | INFO |   val_num_samples: None
INFO:root:  video_encode: Slowonly_pool
2024-10-13,01:31:23 | INFO |   video_encode: Slowonly_pool
INFO:root:  wandb: False
2024-10-13,01:31:23 | INFO |   wandb: False
INFO:root:  wandb_notes: 
2024-10-13,01:31:23 | INFO |   wandb_notes: 
INFO:root:  wandb_project_name: open-clip
2024-10-13,01:31:23 | INFO |   wandb_project_name: open-clip
INFO:root:  warmup: 100
2024-10-13,01:31:23 | INFO |   warmup: 100
INFO:root:  wd: 0.2
2024-10-13,01:31:23 | INFO |   wd: 0.2
INFO:root:  workers: 1
2024-10-13,01:31:23 | INFO |   workers: 1
INFO:root:  world_size: 1
2024-10-13,01:31:23 | INFO |   world_size: 1
INFO:root:  zeroshot_frequency: 2
2024-10-13,01:31:23 | INFO |   zeroshot_frequency: 2
/Users/920753844/Diff-Foley/training/open_cavp_main/src/training/main_wds_intra_contrast.py:303: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = GradScaler() if args.precision == "amp" else None
INFO:root:DEBUG: Line 327 of main()
2024-10-13,01:31:23 | INFO | DEBUG: Line 327 of main()
Shards List:  ['/Users/920753844/Diff-Foley/video/goodarchive_1.tar']
INFO:root:Panya: [get_wds_dataset_vggsound_audioset_music_intra_contrast]: Value of 'resampled': False
2024-10-13,01:31:23 | INFO | Panya: [get_wds_dataset_vggsound_audioset_music_intra_contrast]: Value of 'resampled': False
INFO:root:Panya: [get_dataset_size]: 
shards_list = ['/Users/920753844/Diff-Foley/video/goodarchive_1.tar'], 
dir_path = /Users/920753844/Diff-Foley/video, 
sizes_filename = /Users/920753844/Diff-Foley/video/sizes.json, 
len_filename = /Users/920753844/Diff-Foley/video/__len__
2024-10-13,01:31:23 | INFO | Panya: [get_dataset_size]: 
shards_list = ['/Users/920753844/Diff-Foley/video/goodarchive_1.tar'], 
dir_path = /Users/920753844/Diff-Foley/video, 
sizes_filename = /Users/920753844/Diff-Foley/video/sizes.json, 
len_filename = /Users/920753844/Diff-Foley/video/__len__
INFO:root:Panya: [get_wds_dataset_vggsound_audioset_music_intra_contrast]: num_samples= 6, num_shards=1
2024-10-13,01:31:23 | INFO | Panya: [get_wds_dataset_vggsound_audioset_music_intra_contrast]: num_samples= 6, num_shards=1
line 382 of main_wds_intra_contrast
INFO:root:Start epoch 0
2024-10-13,01:31:23 | INFO | Start epoch 0
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file YwZOeyAQC8.spec.npy
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file YwZOeyAQC8.spec.npy
INFO:root:Panya: [group_by_keys_nothrow]: Setting new dictionary with key  YwZOeyAQC8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Setting new dictionary with key  YwZOeyAQC8
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to YwZOeyAQC8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to YwZOeyAQC8
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file YwZOeyAQC8.video.jpg
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file YwZOeyAQC8.video.jpg
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to YwZOeyAQC8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to YwZOeyAQC8
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file YX_rSjCexE.spec.npy
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file YX_rSjCexE.spec.npy
INFO:root:Panya: [group_by_keys_nothrow]: yielding sample YwZOeyAQC8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: yielding sample YwZOeyAQC8
INFO:root:Panya: [group_by_keys_nothrow]: Setting new dictionary with key  YX_rSjCexE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Setting new dictionary with key  YX_rSjCexE
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to YX_rSjCexE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to YX_rSjCexE
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file YX_rSjCexE.video.jpg
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file YX_rSjCexE.video.jpg
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to YX_rSjCexE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to YX_rSjCexE
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file zcZ5Zj2yP8.spec.npy
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file zcZ5Zj2yP8.spec.npy
INFO:root:Panya: [group_by_keys_nothrow]: yielding sample YX_rSjCexE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: yielding sample YX_rSjCexE
INFO:root:Panya: [group_by_keys_nothrow]: Setting new dictionary with key  zcZ5Zj2yP8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Setting new dictionary with key  zcZ5Zj2yP8
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to zcZ5Zj2yP8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to zcZ5Zj2yP8
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file zcZ5Zj2yP8.video.jpg
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file zcZ5Zj2yP8.video.jpg
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to zcZ5Zj2yP8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to zcZ5Zj2yP8
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file ZeMV790MXE.spec.npy
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file ZeMV790MXE.spec.npy
INFO:root:Panya: [group_by_keys_nothrow]: yielding sample zcZ5Zj2yP8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: yielding sample zcZ5Zj2yP8
INFO:root:Panya: [group_by_keys_nothrow]: Setting new dictionary with key  ZeMV790MXE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Setting new dictionary with key  ZeMV790MXE
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to ZeMV790MXE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to ZeMV790MXE
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file ZeMV790MXE.video.jpg
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file ZeMV790MXE.video.jpg
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to ZeMV790MXE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to ZeMV790MXE
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file ZHUMfueO0.spec.npy
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file ZHUMfueO0.spec.npy
INFO:root:Panya: [group_by_keys_nothrow]: yielding sample ZeMV790MXE
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: yielding sample ZeMV790MXE
INFO:root:Panya: [group_by_keys_nothrow]: Setting new dictionary with key  ZHUMfueO0
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Setting new dictionary with key  ZHUMfueO0
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to ZHUMfueO0
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to ZHUMfueO0
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file ZHUMfueO0.video.jpg
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file ZHUMfueO0.video.jpg
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to ZHUMfueO0
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to ZHUMfueO0
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file ZobEDvRtD8.spec.npy
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file ZobEDvRtD8.spec.npy
INFO:root:Panya: [group_by_keys_nothrow]: yielding sample ZHUMfueO0
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: yielding sample ZHUMfueO0
INFO:root:Panya: [group_by_keys_nothrow]: Setting new dictionary with key  ZobEDvRtD8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Setting new dictionary with key  ZobEDvRtD8
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to ZobEDvRtD8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix spec.npy to ZobEDvRtD8
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys(['fname', 'data', '__url__'])
INFO:root:Panya: [group_by_keys_nothrow]: processing file ZobEDvRtD8.video.jpg
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: processing file ZobEDvRtD8.video.jpg
INFO:root:Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to ZobEDvRtD8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Adding suffix video.jpg to ZobEDvRtD8
INFO:root:Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys([])
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: isinstance assertion true. filesample type=<class 'dict'>. keys=dict_keys([])
Panya: [group_by_keys_nothrow]: no keys in filesample, breaking.
INFO:root:Panya: [group_by_keys_nothrow]: Yielding sample ZobEDvRtD8
2024-10-13,01:31:23 | INFO | Panya: [group_by_keys_nothrow]: Yielding sample ZobEDvRtD8
INFO:root:Panya: [preprocess_vggsound_audioset_temporal_contrast]: processing sample with zcZ5Zj2yP8
2024-10-13,01:31:23 | INFO | Panya: [preprocess_vggsound_audioset_temporal_contrast]: processing sample with zcZ5Zj2yP8
INFO:root:Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: cut_video function. video is of type:, <class 'bytes'>
2024-10-13,01:31:23 | INFO | Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: cut_video function. video is of type:, <class 'bytes'>
INFO:root:Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: [3, 13, 21], [19, 29, 37]
2024-10-13,01:31:23 | INFO | Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: [3, 13, 21], [19, 29, 37]
Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: stream is of type  <class '_io.BytesIO'>
INFO:root:Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: video_npy shape after loading: (42, 224, 224, 3)
2024-10-13,01:31:23 | INFO | Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: video_npy shape after loading: (42, 224, 224, 3)
INFO:root:Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: video_npy shape after transpose: (42, 3, 224, 224)
2024-10-13,01:31:23 | INFO | Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: video_npy shape after transpose: (42, 3, 224, 224)
INFO:root:Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: exiting and returning: 
 sample_video_list, sample_spec_list, start_frame, end_frame
2024-10-13,01:31:23 | INFO | Panya: [cut_video_and_spec_vggsound_audioset_temporal_contrast]: exiting and returning: 
 sample_video_list, sample_spec_list, start_frame, end_frame
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/Users/920753844/Diff-Foley/training/open_cavp_main/src/training/main_wds_intra_contrast.py", line 463, in <module>
    main(sys.argv[1:])
  File "/Users/920753844/Diff-Foley/training/open_cavp_main/src/training/main_wds_intra_contrast.py", line 390, in main
    train_one_epoch(model, data, loss, epoch, optimizer, scaler, scheduler, args, tb_writer=writer)
  File "/Users/920753844/Diff-Foley/training/open_cavp_main/src/training/train_wds_intra_contrast.py", line 81, in train_one_epoch
    for i, batch in enumerate(dataloader):
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/webdataset/pipeline.py", line 71, in iterator
    for sample in self.iterator1():
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/utils/data/dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/utils/data/dataloader.py", line 1344, in _next_data
    return self._process_data(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/utils/data/dataloader.py", line 1370, in _process_data
    data.reraise()
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/_utils.py", line 706, in reraise
    raise exception
KeyError: Caught KeyError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/utils/data/_utils/worker.py", line 309, in _worker_loop
    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 42, in fetch
    data = next(self.dataset_iter)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/webdataset/pipeline.py", line 71, in iterator
    for sample in self.iterator1():
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/webdataset/filters.py", line 490, in _batched
    for sample in data:
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/webdataset/filters.py", line 309, in _map
    if handler(exn):
       ^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/webdataset/filters.py", line 86, in reraise_exception
    raise exn
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/webdataset/filters.py", line 307, in _map
    result = f(sample)
             ^^^^^^^^^
  File "/Users/920753844/Diff-Foley/training/open_cavp_main/src/training/data.py", line 2200, in preprocess_vggsound_audioset_temporal_contrast
    msg = f'Panya: [preprocess_vggsound_audioset_temporal_contrast]: Finished taking slices of the sample with keys: {sample["__keys__"]} '
                                                                                                                      ~~~~~~^^^^^^^^^^^^
KeyError: '__keys__'

I1013 01:31:23.462000 139773356537472 torch/_dynamo/utils.py:335] TorchDynamo compilation metrics:
I1013 01:31:23.462000 139773356537472 torch/_dynamo/utils.py:335] Function    Runtimes (s)
I1013 01:31:23.462000 139773356537472 torch/_dynamo/utils.py:335] ----------  --------------
E1013 01:31:24.201000 140318800746112 torch/distributed/elastic/multiprocessing/api.py:833] failed (exitcode: 1) local_rank: 0 (pid: 1777588) of binary: /Users/920753844/diff-foly-env-new/bin/python
Traceback (most recent call last):
  File "/Users/920753844/diff-foly-env-new/bin/torchrun", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 348, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/distributed/run.py", line 901, in main
    run(args)
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/distributed/run.py", line 892, in run
    elastic_launch(
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/distributed/launcher/api.py", line 133, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/920753844/diff-foly-env-new/lib64/python3.11/site-packages/torch/distributed/launcher/api.py", line 264, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
src.training.main_wds_intra_contrast FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-10-13_01:31:24
  host      : gpu01.hpc.at.sfsu.edu
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 1777588)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
srun: error: gpu01: task 0: Exited with exit code 1
